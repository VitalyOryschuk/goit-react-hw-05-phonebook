{"version":3,"sources":["components/style.module.css","components/Filter/Filter.module.css","components/ContactsList/pop.module.css","components/Notify/Notify.module.css","transition/message.module.css","transition/pop.module.css","components/ContactsList/ContactsList.module.css","components/SearchForm/SearchForm.jsx","components/ContactsList/Contact.jsx","components/ContactsList/ContactsList.jsx","components/Notify/Notify.jsx","components/Filter/Filter.jsx","components/App.jsx","index.js","components/SearchForm/SearchForm.module.css"],"names":["module","exports","SearchForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onChangeSubmit","reset","this","className","styles","form","onSubmit","htmlFor","input","type","onChange","id","button","Component","Contact","contact","onDeleteContact","container","onClick","ContactsList","items","TransitionGroup","component","contactList","map","CSSTransition","key","timeout","enter","exit","unmountOnExit","classNames","pop","ContactsListItem","Notify","message","title","Filter","onChangeFilter","FilterForm","findContact","contacts","find","item","toLowerCase","App","filter","isShowNotify","info","handleSignUp","contactFind","contactToAdd","hideNotify","setTimeout","handleChangeFilter","deleteContact","persistedTask","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","filteredContacts","includes","filterContacts","in","appear","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28b9a226.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__19g28\",\"title\":\"style_title__jiTj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1OZ1m\",\"FilterForm\":\"Filter_FilterForm__2CkGz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3gIwm\",\"enterActive\":\"pop_enterActive__3l_07\",\"exit\":\"pop_exit__2TBys\",\"exitActive\":\"pop_exitActive__h-0Mw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notify_title__2pPVF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"message_enter__3Swfl\",\"enterActive\":\"message_enterActive__ShZ31\",\"exit\":\"message_exit__vgOEx\",\"exitActive\":\"message_exitActive__1-6fX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__Ds5sE\",\"enterActive\":\"pop_enterActive__1RFgn\",\"exit\":\"pop_exit__3YEDt\",\"exitActive\":\"pop_exitActive__3OVFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__2_sCa\",\"ContactsListItem\":\"ContactsList_ContactsListItem__1czPE\",\"button\":\"ContactsList_button__2BSDz\",\"container\":\"ContactsList_container__2x0ij\"};","import React, { Component } from 'react';\nimport shortid from 'shortid';\n// import { CSSTransition } from 'react-transition-group';\nimport styles from './SearchForm.module.css';\n\nexport default class SearchForm extends Component {\n  // static defaultProps = {\n  //   onChangeSubmit: function,\n  // };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n\n  numberInputId = shortid.generate();\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onChangeSubmit({ ...this.state });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div>\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label htmlFor={this.nameInputId}>\n            Name\n            <input\n              className={styles.input}\n              type=\"text\"\n              value={name}\n              onChange={this.handleChange}\n              id={this.nameInputId}\n              name=\"name\"\n            />\n          </label>\n          <label htmlFor={this.numberInputId}>\n            Number\n            <input\n              className={styles.input}\n              type=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              id={this.numberInputId}\n              name=\"number\"\n            />\n          </label>\n          <button className={styles.button} type=\"submit\">\n            Add contacts\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './ContactsList.module.css';\n\nconst Contact = ({ contact, onDeleteContact }) => (\n  <div>\n    <p className={styles.container}>\n      {contact.name}:<span>{contact.number}</span>\n      <button onClick={onDeleteContact} className={styles.button} type=\"button\">\n        Delete\n      </button>\n    </p>\n  </div>\n);\n\nContact.propTypes = {\n  contact: T.shape({\n    name: T.string.isRequired,\n    number: T.string.isRequired,\n  }).isRequired,\n  onDeleteContact: T.func.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport T from 'prop-types';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport Contact from './Contact';\nimport styles from './ContactsList.module.css';\nimport pop from './pop.module.css';\n\nconst ContactsList = ({ items, onDeleteContact }) => (\n  <TransitionGroup component=\"ul\" className={styles.contactList}>\n    {items.map(contact => (\n      <CSSTransition\n        key={contact.id}\n        timeout={{ enter: 750, exit: 850 }}\n        unmountOnExit\n        classNames={pop}\n      >\n        <li className={styles.ContactsListItem}>\n          <Contact\n            contact={contact}\n            onDeleteContact={() => onDeleteContact(contact.id)}\n          />\n        </li>\n      </CSSTransition>\n    ))}\n  </TransitionGroup>\n);\n\nContactsList.propTypes = {\n  items: T.arrayOf(T.shape({})).isRequired,\n  onDeleteContact: T.func.isRequired,\n};\n\nexport default ContactsList;\n","import React from 'react';\nimport T from 'prop-types';\nimport styles from './Notify.module.css';\n\nconst Notify = ({ message }) => {\n  return <h2 className={styles.title}>{message}</h2>;\n};\n\nNotify.propTypes = {\n  message: T.string.isRequired,\n};\n\nexport default Notify;\n","import React from 'react';\nimport T from 'prop-types';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => (\n  <div className={styles.FilterForm}>\n    <label>\n      Find contacts by name\n      <input\n        value={value}\n        onChange={onChangeFilter}\n        className={styles.input}\n        type=\"text\"\n      />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  value: T.string.isRequired,\n  onChangeFilter: T.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport SearchForm from './SearchForm/SearchForm';\nimport ContactsList from './ContactsList/ContactsList';\nimport Notify from './Notify/Notify';\nimport Filter from './Filter/Filter';\nimport styles from './style.module.css';\nimport '../transition/fade.css';\nimport '../transition/slide.css';\nimport message from '../transition/message.module.css';\nimport pop from '../transition/pop.module.css';\n\nconst filterContacts = (contacts, filter) => {\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n\nconst findContact = (contacts, contact) =>\n  contacts.find(item => item.name.toLowerCase() === contact.name.toLowerCase());\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      // { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      // { id: 'id-2', name: 'Hermion Kline', number: '443-89-12' },\n      // { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      // { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    isShowNotify: false,\n    info: '',\n  };\n\n  componentDidMount() {\n    const persistedTask = localStorage.getItem('contacts');\n    if (persistedTask) {\n      const contacts = JSON.parse(persistedTask);\n      this.setState({ contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  handleSignUp = contact => {\n    const contactFind = findContact(this.state.contacts, contact);\n    const contactToAdd = {\n      ...contact,\n      id: shortid.generate(),\n    };\n\n    if (contactFind) {\n      this.setState({\n        info: `${contactFind.name} is already in contacts!`,\n        isShowNotify: true,\n      });\n      this.hideNotify();\n    } else if (contact.name) {\n      this.setState(state => ({\n        contacts: [...state.contacts, contactToAdd],\n        isShowNotify: false,\n      }));\n    } else {\n      this.setState({ info: `Input name please!`, isShowNotify: true });\n      this.hideNotify();\n    }\n  };\n\n  hideNotify = () => {\n    setTimeout(() => {\n      this.setState({ isShowNotify: false });\n    }, 1000);\n  };\n\n  handleChangeFilter = e => {\n    this.setState({ filter: e.target.value });\n  };\n\n  deleteContact = id => {\n    this.setState(state => ({\n      contacts: state.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { contacts, filter, info, isShowNotify } = this.state;\n    const filteredContacts = filterContacts(contacts, filter);\n    return (\n      <CSSTransition in timeout={1000} classNames=\"fade\" appear>\n        <div className={styles.container}>\n          <CSSTransition in timeout={2000} classNames=\"slide\" appear>\n            <h2 className={styles.title}>PhoneBook</h2>\n          </CSSTransition>\n          <TransitionGroup>\n            {isShowNotify && (\n              <CSSTransition\n                timeout={{ enter: 250, exit: 750 }}\n                classNames={message}\n                unmountOnExit\n              >\n                <Notify message={info} />\n              </CSSTransition>\n            )}\n          </TransitionGroup>\n          <SearchForm onChangeSubmit={this.handleSignUp} />\n          {contacts.length > 0 && <h2 className={styles.title}>Contacts</h2>}\n          <TransitionGroup>\n            {contacts.length > 1 && (\n              <CSSTransition timeout={{ enter: 250, exit: 1000 }} classNames={pop}>\n                <Filter value={filter} onChangeFilter={this.handleChangeFilter} />\n              </CSSTransition>\n            )}\n          </TransitionGroup>\n          <ContactsList items={filteredContacts} onDeleteContact={this.deleteContact} />\n        </div>\n      </CSSTransition>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"SearchForm_form__MiICw\",\"input\":\"SearchForm_input__2_r8s\",\"button\":\"SearchForm_button__3GJ4X\",\"Header-appear\":\"SearchForm_Header-appear__1orcf\",\"Header-appear-active\":\"SearchForm_Header-appear-active__3lukt\"};"],"sourceRoot":""}